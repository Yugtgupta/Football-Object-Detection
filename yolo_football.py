# -*- coding: utf-8 -*-
"""Yolo-football.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rYNXn5hetAhdYrI68pKMh9_d7-IrVX8q
"""

!pip install ultralytics

/content/drive/MyDrive/YOLO-football

from google.colab import drive
drive.mount('/content/drive')

from ultralytics import YOLO

!mkdir /content/drive/MyDrive/YOLO-football/datasets

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/YOLO-football/datasets

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="uLWwvVGnmQ0Q2vIGMpRD")
project = rf.workspace("practice-uvcxz").project("football-players-detection-ngpgq")
version = project.version(1)
dataset = version.download("yolov8")

# Commented out IPython magic to ensure Python compatibility.
# Training the model
# %cd /content/drive/MyDrive/YOLO-football
!yolo task=detect mode=train model=yolov8s.pt data={dataset.location}/data.yaml epochs=50 imgsz=640 plots=True

!ls /content/drive/MyDrive/YOLO-football/runs/detect/train

#Method 1 to open image
# from PIL import Image
# Image.open('/content/drive/MyDrive/YOLO-football/runs/detect/train/confusion_matrix_normalized.png')

#Plotting confusion matrix to see the performance
from IPython.display import Image,display
Image('/content/drive/MyDrive/YOLO-football/runs/detect/train/confusion_matrix_normalized.png', width = 600)

Image('/content/drive/MyDrive/YOLO-football/runs/detect/train/results.png') #Performance analysis

Image('/content/drive/MyDrive/YOLO-football/runs/detect/train/val_batch0_pred.jpg')

##Validating custom model

!yolo task=detect mode=val model=/content/drive/MyDrive/YOLO-football/runs/detect/train/weights/best.pt data={dataset.location}/data.yaml

##Inference with custom model

!yolo task=detect mode=predict model=/content/drive/MyDrive/YOLO-football/runs/detect/train/weights/best.pt conf=0.25 source={dataset.location}/test/images save=True

import os
for image in os.listdir('/content/drive/MyDrive/YOLO-football/runs/detect/predict'):
  image_path = os.path.join('/content/drive/MyDrive/YOLO-football/runs/detect/predict', image)
  display(Image(image_path))
  print("\n")

#Another method to display images
# import glob
# from IPython.display import Image, display

# for image_path in glob.glob(f'{HOME}/runs/detect/predict3/*.jpg')[:3]:
#       display(Image(filename=image_path, width=600))
#       print("\n")

# Testing on a sample video
!yolo task=detect mode=predict model=/content/drive/MyDrive/YOLO-football/runs/detect/train/weights/best.pt conf=0.25 source='/content/drive/MyDrive/YOLO-football/football.mp4' save = True

# Testing on a sample video 2-yt
!yolo task=detect mode=predict model=/content/drive/MyDrive/YOLO-football/runs/detect/train/weights/best.pt conf=0.25 source='/content/drive/MyDrive/YOLO-football/football-yt.mp4' save = True

# !ffmpeg -i /content/runs/detect/predict3/football.avi /content/runs/detect/predict3/footballing.mp4 #if want to convert .avi file to mp3

from IPython.display import Video
Video('/content/drive/MyDrive/YOLO-football/runs/detect/predict2/football.avi', width = 800)

